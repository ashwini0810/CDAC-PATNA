
-------------------------------------
Integrity constraints :
-------------------------------------
a) primary key : not null + duplicate values not allowed -- we use primary keys 
b) Not null constraints : cannot have null  values -- use not null keyword 
c) Referential integrity : that the refered column should have a valid value -- foreign keys 
d) check constraint : checks for specified custom condition provided by user 
e) unique :  duplicate values not allowed  -- use unique keyword
/*
---------------------------------
    Template for the entire demo 
---------------------------------
A) creating a table MY_FIRST_TABLE with a constraint in place on a column <COL>

1) insert a duplicate value in that column <COL>
2) insert a null value into that column <COL>

alter (drops the constraints that we created at point A)
alter ( adds the constraint back again ) 

Example where what happens if the data is already corrupt for that constraint
-------------------------------------------------------------------------
*/
------------------------------
demo on Integrity constraint
------------------------------
-- create the table 
CREATE TABLE MY_FIRST_TABLE
(
NAME VARCHAR2(100),
ROLLNO NUMBER ,
DATE_OF_ENROLLMENT DATE
);

desc MY_FIRST_TABLE;

select  * FrOM  MY_FIRST_TABLE;
insert into MY_FIRST_TABLE(ROLLNO) values (1);
-- duplicate insert
insert into MY_FIRST_TABLE(ROLLNO) values (1);
-- null insert
insert into MY_FIRST_TABLE(ROLLNO) values (null);

-- a) primary key rollno (Unique + not null )

drop TABLE MY_FIRST_TABLE;

CREATE TABLE MY_FIRST_TABLE
(
ROLLNO NUMBER,
NAME VARCHAR2(100),
DATE_OF_ENROLLMENT DATE,
constraint cons1 primary key(rollno)
);

desc MY_FIRST_TABLE;
select  * FrOM  MY_FIRST_TABLE;
insert into MY_FIRST_TABLE(ROLLNO) values (1);
-- duplicate insert
insert into MY_FIRST_TABLE(ROLLNO) values (1);
-- null insert
insert into MY_FIRST_TABLE(ROLLNO) values (null);

select * from user_constraints ;
-- DROPPING THE CONSTRAINT
ALTER TABLE MY_FIRST_TABLE drop constraint cons1;

-- adding THE CONSTRAINT
ALTER TABLE MY_FIRST_TABLE add constraint cons1 primary key(rollno);


-- a) Unique key NAME (Unique)
drop TABLE MY_FIRST_TABLE;

CREATE TABLE MY_FIRST_TABLE
(
ROLLNO NUMBER,
NAME VARCHAR2(100),
DATE_OF_ENROLLMENT DATE,
constraint cons1 primary key(rollno),
constraint cons2 unique(NAME)
);

select  * FrOM USER_constraints where table_name = 'MY_FIRST_TABLE' ;
select  * FrOM  MY_FIRST_TABLE;
insert into MY_FIRST_TABLE(ROLLNO,NAME) values (1,'gaurav');
-- duplicate insert
insert into MY_FIRST_TABLE(ROLLNO,NAME) values (2,'gaurav');
-- null insert
insert into MY_FIRST_TABLE(ROLLNO,NAME) values (3,null);
insert into MY_FIRST_TABLE(ROLLNO,NAME) values (4,null);

-- DROPPING THE CONSTRAINT
ALTER TABLE MY_FIRST_TABLE drop constraint cons2;

-- adding THE CONSTRAINT
ALTER TABLE MY_FIRST_TABLE add constraint cons2 unique(NAME);

--- what if the column has non-unique values and we need to apply a unique constraint over that column
drop table test_unique;
create table test_unique ( city varchar2(10));
insert into test_unique(city) values ( 'Pune');
insert into test_unique(city) values ( 'Pune');

select city,rowid from test_unique;
alter table test_unique add constraint cons33 unique(city);

-- some way to make sure the data is unique 
update test_unique
set city = 'Delhi'
where rowid = 'AKfALXAB7AAAAMNAAA'

-- a) Not null  DATE_OF_ENROLLMENT (not null )
drop TABLE MY_FIRST_TABLE;

CREATE TABLE MY_FIRST_TABLE
(
ROLLNO NUMBER,
NAME VARCHAR2(100) ,
DATE_OF_ENROLLMENT date constraint cons3 not null ,
constraint cons1 primary key(rollno),
constraint cons2 unique(name)
);
alter session set nls_date_format = 'dd-mon-yyyy hh24:mi:ss';

select  * FrOM USER_constraints where table_name = 'MY_FIRST_TABLE' ;
select  * FrOM  MY_FIRST_TABLE;
insert into MY_FIRST_TABLE(ROLLNO,NAME,DATE_OF_ENROLLMENT) values (1,'gaurav',to_date('01-01-2001','dd-mm-yyyy'));
-- duplicate insert
insert into MY_FIRST_TABLE(ROLLNO,NAME,DATE_OF_ENROLLMENT) values (2,'pratik',to_date('01-01-2001','dd-mm-yyyy'));
-- null insert
insert into MY_FIRST_TABLE(ROLLNO,NAME,DATE_OF_ENROLLMENT) values (3,'sagar',null);

-- trying to update a null value in a not null column 
update MY_FIRST_TABLE set DATE_OF_ENROLLMENT = null ;

-- DROPPING THE CONSTRAINT
ALTER TABLE MY_FIRST_TABLE DROP CONSTRAINT CONS3;

-- ADDING THE CONSTRAINT
ALTER TABLE MY_FIRST_TABLE MODIFY (DATE_OF_ENROLLMENT NOT NULL);


-- a column without the not null constraints 
-- nulls will be allowed
-- alter the table to add a not null constraint 
-- fails since we already have nulls

drop table test_nulls;
create table test_nulls ( feedback varchar2(100));

insert into test_nulls(feedback) values ( 'This is my first feedback');
insert into test_nulls(feedback) values ( '');

select * from test_nulls;

ALTER TABLE test_nulls MODIFY (feedback NOT NULL);
update test_nulls set feedback = 'Default feedback because it was null' where feedback is null 


-- a) DATE_OF_BIRTH (check constraint  )
drop TABLE MY_FIRST_TABLE;

CREATE TABLE MY_FIRST_TABLE
(
ROLLNO NUMBER,
NAME VARCHAR2(100) ,
DATE_OF_ENROLLMENT date constraint cons3 not null ,
DATE_OF_BIRTH DATE,
constraint cons1 primary key(rollno),
constraint cons2 unique(name),
CONSTRAINT cons4 CHECK(DATE_OF_BIRTH > to_date('01-01-2001','dd-mm-yyyy') )
);


select  * FrOM USER_constraints where table_name = 'MY_FIRST_TABLE' ;
select  * FrOM  MY_FIRST_TABLE;
insert into MY_FIRST_TABLE(ROLLNO,NAME,DATE_OF_ENROLLMENT,DATE_OF_BIRTH) values (1,'gaurav',to_date('10-01-2001','dd-mm-yyyy'),to_date('10-01-2001','dd-mm-yyyy'));
-- insert that will fail
insert into MY_FIRST_TABLE(ROLLNO,NAME,DATE_OF_ENROLLMENT,DATE_OF_BIRTH) values (2,'gaurav',to_date('01-01-2000','dd-mm-yyyy'),to_date('01-01-2000','dd-mm-yyyy'));
-- insert duplicate 
insert into MY_FIRST_TABLE(ROLLNO,NAME,DATE_OF_ENROLLMENT,DATE_OF_BIRTH) values (3,'Pratik',to_date('11-11-2011','dd-mm-yyyy'),to_date('10-01-2001','dd-mm-yyyy'));
-- null insert
insert into MY_FIRST_TABLE(ROLLNO,NAME,DATE_OF_ENROLLMENT,DATE_OF_BIRTH) values (4,'sagar',to_date('01-01-2000','dd-mm-yyyy'),null);

select * from my_first_table  where DATE_OF_BIRTH is null ;
-- updating the column to not satisfy the check constraint 
update MY_FIRST_TABLE set DATE_OF_BIRTH = to_date('01-01-2000','dd-mm-yyyy') where DATE_OF_BIRTH is null 
-- this will get updated 
update MY_FIRST_TABLE set DATE_OF_BIRTH = to_date('01-01-2010','dd-mm-yyyy') where DATE_OF_BIRTH is null 


-- DROPPING THE CONSTRAINT
ALTER TABLE MY_FIRST_TABLE drop constraint cons4;

-- adding THE CONSTRAINT
ALTER TABLE MY_FIRST_TABLE add constraint CONS4 CHECK(DATE_OF_BIRTH > to_date('01-01-2001','dd-mm-yyyy') );

--- Foreign key demo
DROP TABLE  MY_FIRST_TABLE;
DROP TABLE  MY_DEPARTMENT_TABLE;


CREATE TABLE MY_DEPARTMENT_TABLE
(
DEPT_ID NUMBER ,
DEPT_NAME VARCHAR2(100),
constraint cons5 PRIMARY KEY(DEPT_ID)
);


CREATE TABLE MY_FIRST_TABLE
(
ROLLNO NUMBER ,
NAME VARCHAR2(100) unique,
DEPARTMENT_ID  NUMBER ,
constraint cons6 primary key(rollno),
CONSTRAINT CONS_FOR FOREIGN KEY (DEPARTMENT_ID) REFERENCES MY_DEPARTMENT_TABLE(DEPT_ID)
);

select * from MY_DEPARTMENT_TABLE;
select * from MY_FIRST_TABLE;

insert into MY_DEPARTMENT_TABLE (DEPT_ID,DEPT_NAME) values (100,'Computer Science');

insert into MY_FIRST_TABLE (ROLLNO,NAME,DEPARTMENT_ID) values (1,'gaurav',100);
-- invalid value 
insert into MY_FIRST_TABLE (ROLLNO,NAME,DEPARTMENT_ID) values (2,'Sagar',200);
-- insert null 
insert into MY_FIRST_TABLE (ROLLNO,NAME,DEPARTMENT_ID) values (3,'Danny',null);
