
CREATE TABLE departments (
  department_id NUMBER PRIMARY KEY,
  department_name VARCHAR2(50)
);

CREATE TABLE employees (
  employee_id   NUMBER,
  first_name    VARCHAR2(50),
  last_name     VARCHAR2(50),
  department_id NUMBER,
  job_title     VARCHAR2(50),
  salary        NUMBER(10, 2),
  hire_date     DATE,
  PRIMARY KEY (employee_id),
  FOREIGN KEY (department_id) REFERENCES departments (department_id)
);


INSERT INTO departments (department_id, department_name)
VALUES (1, 'HR');

INSERT INTO departments (department_id, department_name)
VALUES (2, 'IT');

INSERT INTO departments (department_id, department_name)
VALUES (3, 'Finance');

INSERT INTO departments (department_id, department_name)
VALUES (4, 'Sales');

INSERT INTO employees (employee_id, first_name, last_name, department_id, job_title, salary, hire_date)
VALUES (1, 'John', 'Doe', 1, 'Manager', 75000.00, TO_DATE('2022-03-15', 'YYYY-MM-DD'));

INSERT INTO employees (employee_id, first_name, last_name, department_id, job_title, salary, hire_date)
VALUES (2, 'Jane', 'Smith', 2, 'Developer', 60000.00, TO_DATE('2022-05-10', 'YYYY-MM-DD'));

INSERT INTO employees (employee_id, first_name, last_name, department_id, job_title, salary, hire_date)
VALUES (3, 'Michael', 'Johnson', 1, 'Analyst', 55000.00, TO_DATE('2022-02-10', 'YYYY-MM-DD'));

INSERT INTO employees (employee_id, first_name, last_name, department_id, job_title, salary, hire_date)
VALUES (4, 'Emily', 'Anderson', 3, 'Assistant Manager', 65000.00, TO_DATE('2023-01-05', 'YYYY-MM-DD'));

INSERT INTO employees (employee_id, first_name, last_name, department_id, job_title, salary, hire_date)
VALUES (5, 'David', 'Wilson', 4, 'Sales Representative', 60000.00, TO_DATE('2022-11-20', 'YYYY-MM-DD'));

INSERT INTO employees (employee_id, first_name, last_name, department_id, job_title, salary, hire_date)
VALUES (6, 'Jessica', 'Thompson', 1, 'Manager', 70000.00, TO_DATE('2022-01-10', 'YYYY-MM-DD'));

INSERT INTO employees (employee_id, first_name, last_name, department_id, job_title, salary, hire_date)
VALUES (7, 'Andrew', 'Miller', 3, 'Analyst', 50000.00, TO_DATE('2022-05-25', 'YYYY-MM-DD'));

INSERT INTO employees (employee_id, first_name, last_name, department_id, job_title, salary, hire_date)
VALUES (8, 'Sophia', 'Brown', 2, 'Developer', 65000.00, TO_DATE('2022-07-15', 'YYYY-MM-DD'));

INSERT INTO employees (employee_id, first_name, last_name, department_id, job_title, salary, hire_date)
VALUES (9, 'Thomas', 'Davis', 4, 'Sales Manager', 90000.00, TO_DATE('2022-04-01', 'YYYY-MM-DD'));

INSERT INTO employees (employee_id, first_name, last_name, department_id, job_title, salary, hire_date)
VALUES (10, 'Jennifer', 'Jones', 1, 'Analyst', 55000.00, TO_DATE('2022-12-01', 'YYYY-MM-DD'));

INSERT INTO employees (employee_id, first_name, last_name, department_id, job_title, salary, hire_date)
VALUES (11, 'Robert', 'Smith', 3, 'Manager', 75000.00, TO_DATE('2023-02-20', 'YYYY-MM-DD'));

INSERT INTO employees (employee_id, first_name, last_name, department_id, job_title, salary, hire_date)
VALUES (12, 'Sarah', 'Adams', 2, 'Developer', 55000.00, TO_DATE('2022-08-10', 'YYYY-MM-DD'));

INSERT INTO employees (employee_id, first_name, last_name, department_id, job_title, salary, hire_date)
VALUES (13, 'Daniel', 'Taylor', 3, 'Analyst', 50000.00, TO_DATE('2023-04-05', 'YYYY-MM-DD'));

INSERT INTO employees (employee_id, first_name, last_name, department_id, job_title, salary, hire_date)
VALUES (14, 'Olivia', 'Wilson', 4, 'Sales Representative', 55000.00, TO_DATE('2022-10-15', 'YYYY-MM-DD'));

INSERT INTO employees (employee_id, first_name, last_name, department_id, job_title, salary, hire_date)
VALUES (15, 'James', 'Johnson', 1, 'Analyst', 60000.00, TO_DATE('2023-01-10', 'YYYY-MM-DD'));

-------------------------------------------------
solutions to the 25 subquery questions in Oracle:
-------------------------------------------------
1. Retrieve the first name and last name of employees who have a salary greater than the average salary.


SELECT first_name, last_name
FROM employees
WHERE salary > (SELECT AVG(salary) FROM employees);


2. Retrieve the department names that have more than three employees.


SELECT department_name
FROM departments
WHERE department_id IN (
    SELECT department_id
    FROM employees
    GROUP BY department_id
    HAVING COUNT(*) > 3
);


3. Retrieve the first name and last name of employees who work in the same department as employee ID 1.


SELECT first_name, last_name
FROM employees
WHERE department_id = (
    SELECT department_id
    FROM employees
    WHERE employee_id = 1
);


4. Retrieve the department names of employees who have a higher salary than any employee in the 'IT' department.


SELECT department_name
FROM departments
WHERE department_id IN (
    SELECT department_id
    FROM employees
    WHERE salary > (
        SELECT MAX(salary)
        FROM employees
        WHERE department_id = (
            SELECT department_id
            FROM departments
            WHERE department_name = 'IT'
        )
    )
);


5. Retrieve the first name and last name of employees who have the same job title as employee ID 3.


SELECT first_name, last_name
FROM employees
WHERE job_title = (
    SELECT job_title
    FROM employees
    WHERE employee_id = 3
);


6. Retrieve the first name and last name of employees who have a salary greater than the maximum salary in the 'Sales' department.


SELECT first_name, last_name
FROM employees
WHERE salary > (
    SELECT MAX(salary)
    FROM employees
    WHERE department_id = (
        SELECT department_id
        FROM departments
        WHERE department_name = 'Sales'
    )
);


7. Retrieve the first name and last name of employees who have a salary greater than the minimum salary in their respective departments.


SELECT first_name, last_name
FROM employees
WHERE salary > (
    SELECT MIN(salary)
    FROM employees e2
    WHERE employees.department_id = e2.department_id
);


8. Retrieve the first name and last name of employees who have a hire date earlier than any employee in the 'Finance' department.


SELECT first_name, last_name
FROM employees
WHERE hire_date < (
    SELECT MIN(hire_date)
    FROM employees
    WHERE department_id = (
        SELECT department_id
        FROM departments
        WHERE department_name = 'Finance'
    )
);


9. Retrieve the department names that have at least one employee with a salary greater than $70,000.


SELECT department_name
FROM departments
WHERE department_id IN (
    SELECT department_id
    FROM employees
    WHERE salary > 70000
);


10. Retrieve the first name and last name of employees who have a salary greater than the average salary in their respective departments.


SELECT first_name, last_name
FROM employees
WHERE salary > (
    SELECT AVG(salary)
    FROM employees e2
    WHERE employees.department_id = e2.department_id
);


11. Retrieve the department names that have more than two employees with a job title of 'Developer'.


SELECT department_name
FROM departments
WHERE department_id IN (
    SELECT department_id
    FROM employees
    WHERE job_title = 'Developer'
    GROUP BY department_id
    HAVING COUNT(*) > 2
);


12. Retrieve the first

 name and last name of employees who have a salary greater than the average salary of employees in the 'HR' department.


SELECT first_name, last_name
FROM employees
WHERE salary > (
    SELECT AVG(salary)
    FROM employees
    WHERE department_id = (
        SELECT department_id
        FROM departments
        WHERE department_name = 'HR'
    )
);


13. Retrieve the department names that have the highest number of employees.


SELECT department_name
FROM departments
WHERE department_id = (
    SELECT department_id
    FROM (
        SELECT department_id, COUNT(*) as employee_count
        FROM employees
        GROUP BY department_id
        ORDER BY COUNT(*) DESC
    )
    WHERE ROWNUM = 1
);


14. Retrieve the first name and last name of employees who have a salary greater than the salary of any employee in the 'Sales' department.


SELECT first_name, last_name
FROM employees
WHERE salary > (
    SELECT MAX(salary)
    FROM employees
    WHERE department_id = (
        SELECT department_id
        FROM departments
        WHERE department_name = 'Sales'
    )
);


15. Retrieve the first name and last name of employees who have a hire date earlier than any employee in the 'IT' department.


SELECT first_name, last_name
FROM employees
WHERE hire_date < (
    SELECT MIN(hire_date)
    FROM employees
    WHERE department_id = (
        SELECT department_id
        FROM departments
        WHERE department_name = 'IT'
    )
);


16. Retrieve the department names that have at least one employee with a salary greater than the average salary in the 'Sales' department.


SELECT department_name
FROM departments
WHERE department_id IN (
    SELECT department_id
    FROM employees
    WHERE salary > (
        SELECT AVG(salary)
        FROM employees
        WHERE department_id = (
            SELECT department_id
            FROM departments
            WHERE department_name = 'Sales'
        )
    )
);


17. Retrieve the first name and last name of employees who have a salary greater than the salary of any employee in their respective departments.


SELECT first_name, last_name
FROM employees
WHERE salary > (
    SELECT MAX(salary)
    FROM employees e2
    WHERE employees.department_id = e2.department_id
);


18. Retrieve the first name and last name of employees who have a hire date later than any employee in the 'Finance' department.


SELECT first_name, last_name
FROM employees
WHERE hire_date > (
    SELECT MAX(hire_date)
    FROM employees
    WHERE department_id = (
        SELECT department_id
        FROM departments
        WHERE department_name = 'Finance'
    )
);


19. Retrieve the department names that have more than two employees with a job title of 'Analyst'.


SELECT department_name
FROM departments
WHERE department_id IN (
    SELECT department_id
    FROM employees
    WHERE job_title = 'Analyst'
    GROUP BY department_id
    HAVING COUNT(*) > 2
);


20. Retrieve the first name and last name of employees who have a salary greater than the average salary of employees in the 'IT' department.


SELECT first_name, last_name
FROM employees
WHERE salary > (
    SELECT AVG(salary)
    FROM employees
    WHERE department_id = (
        SELECT department_id
        FROM departments
        WHERE department_name = 'IT'
    )
);


21. Retrieve the department names that have the lowest number of employees.


SELECT department_name
FROM departments
WHERE department_id = (
    SELECT department_id
    FROM

 (
        SELECT department_id, COUNT(*) as employee_count
        FROM employees
        GROUP BY department_id
        ORDER BY COUNT(*) ASC
    )
    WHERE ROWNUM = 1
);


22. Retrieve the first name and last name of employees who have a salary greater than the salary of any employee in the 'HR' department.


SELECT first_name, last_name
FROM employees
WHERE salary > (
    SELECT MAX(salary)
    FROM employees
    WHERE department_id = (
        SELECT department_id
        FROM departments
        WHERE department_name = 'HR'
    )
);


23. Retrieve the first name and last name of employees who have a hire date later than any employee in the 'Sales' department.


SELECT first_name, last_name
FROM employees
WHERE hire_date > (
    SELECT MAX(hire_date)
    FROM employees
    WHERE department_id = (
        SELECT department_id
        FROM departments
        WHERE department_name = 'Sales'
    )
);


24. Retrieve the department names that have at least one employee with a salary greater than the average salary in their respective departments.


SELECT department_name
FROM departments
WHERE department_id IN (
    SELECT department_id
    FROM employees
    WHERE salary > (
        SELECT AVG(salary)
        FROM employees e2
        WHERE employees.department_id = e2.department_id
    )
);


25. Retrieve the first name and last name of employees who have a salary greater than the salary of any employee in the 'Finance' department.


SELECT first_name, last_name
FROM employees
WHERE salary > (
    SELECT MAX(salary)
    FROM employees
    WHERE department_id = (
        SELECT department_id
        FROM departments
        WHERE department_name = 'Finance'
    )
);




